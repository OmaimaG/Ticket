{"ast":null,"code":"var _jsxFileName = \"C:\\\\ticket\\\\ticketproject\\\\client\\\\src\\\\components\\\\password-reset\\\\passwordreset.comp.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Container, Row, Col, Form, FormLabel } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ResetPassword = ({\n  handleOnChange,\n  handleOnResetSubmit,\n  formSwitcher,\n  email\n}) => {\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"reset password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          autoComplete: \"off\",\n          onSubmit: handleOnResetSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email Adress \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 1\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              value: email,\n              onChange: handleOnChange,\n              placeholder: \"Enter Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"rest\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#!\",\n          onClick: () => formSwitcher('Login'),\n          children: \"Login now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 1\n  }, this);\n};\n_c = ResetPassword;\nResetPassword.propTypes = {\n  handleOnChange: PropTypes.func.isRequired,\n  handleOnResetSubmit: PropTypes.func.isRequired,\n  formSwitcher: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired\n};\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","PropTypes","Button","Container","Row","Col","Form","FormLabel","jsxDEV","_jsxDEV","ResetPassword","handleOnChange","handleOnResetSubmit","formSwitcher","email","children","className","fileName","_jsxFileName","lineNumber","columnNumber","autoComplete","onSubmit","Group","Control","type","name","value","onChange","placeholder","href","onClick","_c","propTypes","func","isRequired","string","$RefreshReg$"],"sources":["C:/ticket/ticketproject/client/src/components/password-reset/passwordreset.comp.js"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button,Container,Row,Col,Form, FormLabel } from 'react-bootstrap';\r\nexport const  ResetPassword  = ({handleOnChange,handleOnResetSubmit, formSwitcher, email} ) => {\r\n  return (\r\n<Container>\r\n<Row>\r\n<Col>\r\n<h1 className='text-center'>reset password</h1>\r\n<hr/>\r\n<form autoComplete='off' onSubmit={handleOnResetSubmit}>\r\n<Form.Group>\r\n<FormLabel>Email Adress </FormLabel>\r\n<Form.Control\r\ntype='email'\r\nname='email'\r\nvalue={email}\r\nonChange={handleOnChange}\r\nplaceholder='Enter Email'\r\n/>\r\n</Form.Group>\r\n\r\n\r\n<Button type ='submit'>rest</Button>\r\n\r\n\r\n</form>\r\n</Col>\r\n</Row>\r\n<Row>\r\n\r\n<Col>\r\n<a href='#!'onClick={()=>formSwitcher('Login')}>Login now</a>\r\n<hr/>\r\n</Col>\r\n</Row>\r\n</Container>\r\n  \r\n  )\r\n\r\n\r\n}\r\nResetPassword.propTypes = {\r\n    handleOnChange: PropTypes.func.isRequired,\r\n    handleOnResetSubmit: PropTypes.func.isRequired,\r\n    formSwitcher: PropTypes.func.isRequired,\r\n    email: PropTypes.string.isRequired,\r\n    }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}